version: "3.9"
   
services:
  #nginx:
  #  image: nginx:latest
  #  ports:
  #    - "80:80"
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #  depends_on:
  #    - frontend
  #    - backend
  #  networks:
  #    - app-tier
  #  restart: "on-failure"

  db:
    image: postgres:latest
    container_name: sql_db
    volumes:
      #- ./backend/data/db:/var/lib/postgresql/data
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=teami2022
      - POSTGRES_USER=teami
      - POSTGRES_PASSWORD=teami
    ports:
      - 5432:5432
  
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=hwalbindang22@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=secret
      - PGADMIN_LISTEN_PORT=80
    ports:
      - 8080:80
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    depends_on:
      - db
    links:
      - "db:sql-server"
    
    


      
  backend:
    image: backend
    container_name: django-back
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/backend/
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=teami2022
      - POSTGRES_USER=teami
      - POSTGRES_PASSWORD=teami
    depends_on:
      - db
    links:
      - db:db


  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
    networks:
      - mq-tier
    depends_on:
      - backend
    tty: true

  worker:
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    entrypoint: "/bin/sh ./run-celery.sh"
    networks:
      - mq-tier
    depends_on:
      - db
      - backend
    tty: true

  frontend:
    image: frontend
    build:
      context: ./frontend
    container_name: react
    #command: [ "npm", "start" ]
    networks:
      - app-tier
    stdin_open: true # react-script 3.4.1 부터 필요
    tty: true
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/frontend/src
      - /frontend/node_modules
  #    - ./frontend/node_modules/:/frontend/node_modules
    environment:
  #    - CI=true
      - CHOKIDAR_USEPOLLING=true
  #    - REACT_APP_BACKEND_URL=http://localhost:8000

networks:
  app-tier:
    driver: bridge
  mq-tier:
    driver: bridge
  db-tier:
    driver: bridge

volumes:
  postgres_data_dev:
  pgadmin_data_dev:
  rabbitmq_data_dev: